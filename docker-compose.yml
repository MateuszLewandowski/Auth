services:
  go:
    build:
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    environment:
      # - DB_HOST=${DB_HOST}
      # - DB_USER=${DB_USER}
      # - DB_PASSWORD=${DB_PASSWORD}
      # - DB_NAME=${DB_NAME}
      # - DB_PORT=${DB_PORT}
      # - DB_SSLMODE=${DB_SSLMODE}
      # - REDIS_ADDR=${REDIS_ADDR}
      # - REDIS_PASSWORD=${REDIS_PASSWORD}
      # - REDIS_DB=${REDIS_DB}
      # - JWT_SECRET=${JWT_SECRET}
      # - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES}
      # - SERVER_PORT=${SERVER_PORT}
      - ENV=${ENV}
    networks:
      - auth

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d auth"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: always
    command: ["redis-server", "--requirepass", "password"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auth

networks:
  auth:

volumes:
  postgres_data:
  redis_data: