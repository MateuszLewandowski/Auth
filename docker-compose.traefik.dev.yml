version: '3.8'

services:
  app-dev:
    image: golang:1.24
    volumes:
      - .:/app
    working_dir: /app
    command: go run ./cmd/main.go
    env_file:
      - .env.dev
    depends_on:
      - db
      - redis
    environment:
      - ENV_FILE=.env.dev
    ports:
      - "8081:8081"
    labels:
      - "traefik.enable=true"

      # public
      - "traefik.http.routers.app-login.rule=Host(`auth.local`) && (PathPrefix(`/login`) || PathPrefix(`/register`) || PathPrefix(`/health`))"
      - "traefik.http.routers.app-login.service=auth-service"

      # auth
      - "traefik.http.routers.app-auth.rule=Host(`auth.local`) && PathPrefix(`/auth`)"
      - "traefik.http.routers.app-auth.service=auth-service"

      # shared service
      - "traefik.http.services.auth-service.loadbalancer.server.port=8081"

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"

  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--entrypoints.web.address=:80"
      - "--providers.docker=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  some_nice_protected_app:
    build: ./protected-app
    expose:
      - "8080"
    labels:
    - "traefik.enable=true"
    # https://doc.traefik.io/traefik/routing/routers/
    # https://doc.traefik.io/traefik-hub/api-gateway/reference/routing/http/routers/ref-rules-prios
    # .public - router name [traefik.http.routers.ROUTER_NAME.PROPERTY]
    - "traefik.http.routers.public.rule=Host(`myapp.local`) && PathPrefix(`/public`)"
    - "traefik.http.routers.public.service=frontend-service"

    - "traefik.http.routers.protected.rule=Host(`myapp.local`) && PathPrefix(`/protected`)"
    - "traefik.http.routers.protected.service=frontend-service"
    - "traefik.http.routers.protected.middlewares=auth"
    #https://doc.traefik.io/traefik/middlewares/http/forwardauth/
    - "traefik.http.middlewares.auth.forwardauth.address=http://app-dev:8081/auth"
    - "traefik.http.middlewares.auth.forwardauth.trustForwardHeader=true"
    - "traefik.http.middlewares.auth.forwardauth.authRequestHeaders=Authorization"
    - "traefik.http.middlewares.auth.forwardauth.authResponseHeaders=X-User"
    # https://doc.traefik.io/traefik/reference/routing-configuration/http/load-balancing/service/
    - "traefik.http.services.frontend-service.loadbalancer.server.port=8080"

volumes:
  db_data:
